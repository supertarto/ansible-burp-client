---
- name: "Install requirements"
  apt:
    name: "{{ burpcli_build_dependencies | join(',') }}"
    state: present

- name: "Force Burp reinstall"
  file:
    path: "{{ burpcli_download_dir }}"
    state: absent
  when: burpcli_force_reinstall

- name: "Does burp download file exist?"
  file:
    path: "{{ burpcli_download_dir }}"
    state: directory

- name: "Download Burp"
  get_url:
    url: "{{ burpcli_url }}"
    dest: "{{ burpcli_download_dir }}/{{ burpcli_src }}.{{ burpcli_srcext }}"
    timeout: 30
    validate_certs: false
  register: burpcli_dl

- name: "Unarchive Burp"
  unarchive:
    src: "{{ burpcli_download_dir }}/{{ burpcli_src }}.{{ burpcli_srcext }}"
    dest: "{{ burpcli_download_dir }}/"
    remote_src: true
  register: burpcli_unarchive
  when: burpcli_dl.changed
  tags:
    - skip_ansible_lint

- name: "Autoreconf source files"
  shell: cd {{ burpcli_download_dir }}/{{ burpcli_src }} && autoreconf -vif creates={{ burpcli_download_dir }}/{{ burpcli_src }}/configure

- name: "./configure"
  shell: cd {{ burpcli_download_dir }}/{{ burpcli_src }} && {{ burpcli_configure_line }}
  args:
    creates: "{{ burpcli_download_dir }}/{{ burpcli_src }}/Makefile"

- name: "Make"
  shell: cd {{ burpcli_download_dir }}/{{ burpcli_src }} && make creates={{ burpcli_download_dir }}/{{ burpcli_src }}/burp

- name: "Does Burp already exists ?"
  stat:
    path: "{{ burpcli_bin_path }}"
  register: burpcli_is_installed

- name: "Uninstall Burp binary, before reinstall"
  shell: cd {{ burpcli_download_dir }}/{{ burpcli_src }} && make uninstall removes={{ burpcli_bin_path }}
  when: burpcli_is_installed.stat.exists and burpcli_unarchive.changed
  tags:
    - skip_ansible_lint

- name: "Make install"
  shell: cd {{ burpcli_download_dir }}/{{ burpcli_src }} && make install creates={{ burpcli_bin_path }}

- name: "Create configurations folders"
  file:
    path: "{{ item }}"
    recurse: true
    state: directory
  with_items:
    - '{{ burpcli_ca_csr_dir }}'
